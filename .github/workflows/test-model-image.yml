name: Test model image

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  test-image-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          auto-activate-base: false

      - name: Install dependencies
        run: |
          conda run -n base python -m pip install 'git+https://github.com/ersilia-os/ersilia.git#egg=ersilia[test]'

      - name: Fetch model and run #TODO change for test command 
        env:
          MODEL_ID: ${{ inputs.repo_name }}
        run: |
          conda run -n base bash -c "
            ersilia -v fetch $MODEL_ID --from_dockerhub --version dev-amd64 &&
            ersilia serve $MODEL_ID &&
            ersilia example -f input.csv -n 3 &&
            ersilia run -i input.csv -o output.csv &&
            ersilia close &&
            ersilia delete $MODEL_ID &&
            head output.csv
          "

  test-image-arm64:
    runs-on: default-linux-arm64
    steps:
      - name: print architecture
        run: |
          echo "Architecture: $(uname -m)"
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          auto-activate-base: false

      - name: Install dependencies
        run: |
          conda run -n base python -m pip install 'git+https://github.com/ersilia-os/ersilia.git#egg=ersilia[test]'
          conda run -n base ersilia --version

      - name: Fetch model and run #TODO change for test command 
        env:
          MODEL_ID: ${{ inputs.repo_name }}
        run: |
          conda run -n base ersilia -v fetch $MODEL_ID --from_dockerhub --version dev-arm64 2>&1 | tee fetch.log
        
      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ersilia-logs
          path: |
            fetch.log
      
  retag-image:
    runs-on: ubuntu-latest
    needs: [test-image-amd64, test-image-arm64]
    steps:
      - name: Check if AMD successful
        if: ${{ needs.test-image-amd64.result == 'success' }}
        run: |
          echo "AMD64" > amd.txt
      
      - name: Check if ARM successful
        if: ${{ needs.test-image-arm64.result == 'success' }}
        run: |
          echo "ARM64" > arm.txt
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # If either amd.txt or arm.txt files exist, we tag the image with date and as latest
      - name: Check architecture information
        id: architecture-info
        env:
          MODEL: ${{ github.event.repository.name }}
        run: |
            if [[ -f amd.txt || -f arm.txt ]]; then
              echo "Tagging image with date and as latest"
              docker buildx imagetools create \
                --tag ersiliaos/$MODEL:$(date +%Y-%m-%d) \
                --tag ersiliaos/$MODEL:latest \
                ersiliaos/$MODEL:dev
              echo "Successfully retagged multi-architecture image."
            else
              echo "Image test failed, keeping the dev tag"
              exit 1
            fi

      - name: Determine Architecture and Save to arch.txt
        run: |
          ARCH=""
          if [[ -f amd.txt ]]; then
            ARCH="AMD64"
          fi
          if [[ -f arm.txt ]]; then
            if [[ -n "$ARCH" ]]; then
              ARCH="$ARCH,ARM64"
            else
              ARCH="ARM64"
            fi
          fi
          echo "$ARCH" > arch.txt
          cat arch.txt 
      
      - name: Download pack method
        uses: actions/download-artifact@v4
        with:
          name: pack-method
          path: .
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Read pack method
        run: cat pack_method.txt

      - name: Upload Artifact Pack Method
        uses: actions/upload-artifact@v4.5.0
        with:
          name: pack-method
          path: pack_method.txt

      - name: Upload Artifact Architecture
        uses: actions/upload-artifact@v4.5.0
        with:
          name: architecture
          path: arch.txt
      
