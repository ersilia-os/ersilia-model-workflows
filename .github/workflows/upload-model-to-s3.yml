name: Upload model to S3

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
        default: "main"
      repo_name:
        description: "Repository name of the model"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AIRTABLE_API_KEY:
        required: true

jobs:
  upload_model_to_s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0
          lfs: 'true'

      - name: Setup Conda and Python
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          auto-activate-base: true
      
      - name: Install dependencies
        run: |
          conda run -n base conda install git-lfs gh -c conda-forge
          conda run -n base git-lfs install
          conda run -n base python -m pip install git+https://github.com/ersilia-os/ersilia.git

      - name: Download model sizes
        uses: actions/download-artifact@v4
        with:
          name: logs
          path: .

      - name: Read model sizes
        run: |
          if [[ ! -f ./model_sizes.txt ]]; then
            echo "Error: model_sizes.txt not found!"
            exit 1
          fi

          ENV_SIZE=$(grep "Environment size" ./model_sizes.txt | awk -F': ' '{print $2}')
          DIR_SIZE=$(grep "Directory size" ./model_sizes.txt | awk -F': ' '{print $2}')

          if [[ -z "$ENV_SIZE" || -z "$DIR_SIZE" ]]; then
            echo "Error: Missing environment size or directory size."
            exit 1
          fi
          echo "Environment Size (MB): $ENV_SIZE"
          echo "Directory Size (MB): $DIR_SIZE"
          echo "ENVIRONMENT_SIZE_MB=$ENV_SIZE" >> $GITHUB_ENV
          echo "DIRECTORY_SIZE_MB=$DIR_SIZE" >> $GITHUB_ENV

      - name: Check metadata file
        id: checkMetadata
        continue-on-error: true
        run: |
          if [[ ! -f metadata.yml ]]; then
            echo "metadata.yml file not found"
            exit 1
          fi

      - name: Update Metadata JSON file with S3 info
        if: steps.checkMetadata.outcome == 'failure'
        run: |
          python3 -c "
          import json
          with open('metadata.json', 'r') as f:
             data = json.load(f)
          data['S3'] = 'https://ersilia-models-zipped.s3.eu-central-1.amazonaws.com/{0}.zip'.format(data['Identifier'])
          data["Model Size"] = ${{ DIRECTORY_SIZE_MB }}
          data["Environment Size"] = ${{ env.ENVIRONMENT_SIZE_MB }}
          with open('metadata.json', 'w') as f:
             json.dump(data, f, indent=4)
          "

      - name: Update Metadata YAML file with S3 info
        if: steps.checkMetadata.outcome == 'success'
        run: |
          python3 -c "
          import yaml
          with open('metadata.yml', 'r') as f:
             data = yaml.safe_load(f)
          data['S3'] = 'https://ersilia-models-zipped.s3.eu-central-1.amazonaws.com/{0}.zip'.format(data['Identifier'])
          data["Model Size"] = ${{ DIRECTORY_SIZE_MB }}
          data["Environment Size"] = ${{ env.ENVIRONMENT_SIZE_MB }}
          with open('metadata.yml', 'w') as f:
             yaml.dump(data, f, default_flow_style=False, sort_keys=False)
          "
          
      - name: Commit and push metadata changes
        uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772 # pin@v1.4
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "updating metadata [skip ci]"
          repository: "ersilia-os/${{ inputs.repo_name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update metadata to AirTable
        env:
          USER_NAME: ${{ github.repository_owner }}
          REPO_NAME: ${{ inputs.repo_name }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        run: |
          conda run -n base pip install requests pyairtable
          echo "Updating metadata to AirTable looking at owner: $USER_NAME"
          echo "$BRANCH"
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/airtableops.py
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/readme_formatter.py
          conda run -n base python3 airtableops.py airtable-update --user $USER_NAME --repo $REPO_NAME --branch main --api-key $AIRTABLE_API_KEY
          rm airtableops.py
          rm readme_formatter.py

      - name: Sync metadata to S3 JSON
        env:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/convert_airtable_to_json.py
          conda run -n base pip install boto3 requests pyairtable
          conda run -n base python convert_airtable_to_json.py $AIRTABLE_API_KEY $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY
          rm convert_airtable_to_json.py
          
      - name: Update README file
        env:
          MODEL_ID: ${{ inputs.repo_name }}
        run: |
          echo "Updating README file with AirTable metadata for model: $MODEL_ID"
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/airtableops.py
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/readme_formatter.py
          conda run -n base python3 airtableops.py readme-update --repo $MODEL_ID --path .
          rm airtableops.py
          rm readme_formatter.py
          less README.md

      - name: Commit and push README changes
        uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772 # pin@v1.4
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "updating readme [skip ci]"
          repository: "ersilia-os/${{ inputs.repo_name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload model to S3
        env:
          REPO_NAME: ${{ inputs.repo_name }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Uploading model to S3 bucket"
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/upload_model_to_s3.py
          conda run -n base python3 upload_model_to_s3.py $REPO_NAME $AWS_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
          rm upload_model_to_s3.py