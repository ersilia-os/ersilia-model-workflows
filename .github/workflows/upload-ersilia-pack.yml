name: Upload ersilia pack dockerized model

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  build-ersilia-pack-image-amd64:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout model repository
        uses: actions/checkout@v4
        with:
          repository: ersilia-os/${{ inputs.repo_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          lfs: true

      - run: git lfs pull

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Setup Python for Ersilia Pack
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install ersilia-pack and generate the right Dockerfile
        run: |
          python -m pip install git+https://github.com/ersilia-os/ersilia-pack.git
          python -m pip install requests
          python -m pip install git+https://github.com/ersilia-os/ersilia.git
          python .github/scripts/resolve_dockerfile.py ${{ inputs.repo_name }}

      - name: Build and push AMD64
        id: build_amd64
        uses: docker/build-push-action@v6.7.0
        timeout-minutes: 60
        with:
          context: ../
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ersiliaos/${{ inputs.repo_name }}:dev-amd64

  build-ersilia-pack-image-arm64:
    runs-on: default-linux-arm64
    steps:

      - name: Checkout model repository
        uses: actions/checkout@v4
        with:
          repository: ersilia-os/${{ inputs.repo_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          lfs: true

      - run: git lfs pull

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Setup Python for Ersilia Pack
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install ersilia-pack and generate the right Dockerfile
        run: |
          python -m pip install git+https://github.com/ersilia-os/ersilia-pack.git
          python -m pip install requests
          python -m pip install git+https://github.com/ersilia-os/ersilia.git
          python .github/scripts/resolve_dockerfile.py ${{ inputs.repo_name }}

      - name: Build and push ARM64
        id: build_arm64
        uses: docker/build-push-action@v6.7.0
        timeout-minutes: 60
        with:
          context: ../
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ersiliaos/${{ inputs.repo_name }}:dev-arm64

  merge-multiarch:
    needs: [build-ersilia-pack-image-amd64, build-ersilia-pack-image-arm64]
    runs-on: ubuntu-latest
    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Check which images exist
        id: check_images
        run: |
          EXISTS_AMD64=$(docker manifest inspect ersiliaos/${{ inputs.repo_name }}:dev-amd64 > /dev/null 2>&1 && echo "true" || echo "false")
          EXISTS_ARM64=$(docker manifest inspect ersiliaos/${{ inputs.repo_name }}:dev-arm64 > /dev/null 2>&1 && echo "true" || echo "false")
          echo "AMD64_EXISTS=$EXISTS_AMD64" >> $GITHUB_ENV
          echo "ARM64_EXISTS=$EXISTS_ARM64" >> $GITHUB_ENV

      - name: Create multi-arch manifest if both exist
        if: env.AMD64_EXISTS == 'true' && env.ARM64_EXISTS == 'true'
        run: |
          docker buildx imagetools create \
            -t ersiliaos/${{ inputs.repo_name }}:dev \
            ersiliaos/${{ inputs.repo_name }}:dev-amd64 \
            ersiliaos/${{ inputs.repo_name }}:dev-arm64

      - name: Rename amd64 to dev if only amd64 exists
        if: env.AMD64_EXISTS == 'true' && env.ARM64_EXISTS == 'false'
        run: |
          docker tag ersiliaos/${{ inputs.repo_name }}:dev-amd64 ersiliaos/${{ inputs.repo_name }}:dev
          docker push ersiliaos/${{ inputs.repo_name }}:dev

      - name: Rename arm64 to amd if only arm64 exists
        if: env.AMD64_EXISTS == 'false' && env.ARM64_EXISTS == 'true'
        run: |
          docker tag ersiliaos/${{ inputs.repo_name }}:dev-arm64 ersiliaos/${{ inputs.repo_name }}:dev
          docker push ersiliaos/${{ inputs.repo_name }}:dev
